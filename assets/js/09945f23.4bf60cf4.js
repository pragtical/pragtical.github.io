"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9733],{28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>a});var t=i(96540);const s={},r=t.createContext(s);function d(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(r.Provider,{value:n},e.children)}},39384:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>o,frontMatter:()=>d,metadata:()=>t,toc:()=>f});const t=JSON.parse('{"id":"api/diff","title":"diff","description":"Functionality to generate the differences between two strings.","source":"@site/docs/api/diff.md","sourceDirName":"api","slug":"/api/diff","permalink":"/docs/api/diff","draft":false,"unlisted":false,"editUrl":"https://github.com/pragtical/pragtical.github.io/edit/main/docs/api/diff.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"bit","permalink":"/docs/api/bit"},"next":{"title":"dirmonitor","permalink":"/docs/api/dirmonitor"}}');var s=i(74848),r=i(28453);const d={sidebar_position:3},a="diff",l={},f=[{value:"diff.changes",id:"diffchanges",level:2},{value:"a",id:"a",level:3},{value:"b",id:"b",level:3},{value:"tag",id:"tag",level:3},{value:"diff",id:"diff-1",level:2},{value:"diff_iter",id:"diff_iter",level:2},{value:"inline_diff",id:"inline_diff",level:2},{value:"split",id:"split",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"diff",children:"diff"})}),"\n",(0,s.jsx)(n.p,{children:"Functionality to generate the differences between two strings."}),"\n",(0,s.jsx)(n.h2,{id:"diffchanges",children:"diff.changes"}),"\n",(0,s.jsx)(n.h3,{id:"a",children:"a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"(field) a: string?\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"b",children:"b"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"(field) b: string?\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"tag",children:"tag"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'(field) tag: "delete"|"equal"|"insert"|"modify"\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"diff-1",children:"diff"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function diff.diff(a: table<integer, string>, b: table<integer, string>)\n  -> diff.changes[]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Generate the differences between two tables of strings."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"diff_iter",children:"diff_iter"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function diff.diff_iter(a: table<integer, string>, b: table<integer, string>)\n  -> fun():diff.changes\n"})}),"\n",(0,s.jsx)(n.p,{children:"Same as diff.diff(...) but in iterable mode."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"inline_diff",children:"inline_diff"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function diff.inline_diff(a: string, b: string)\n  -> diff.changes[]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Generates the differences between two strings."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"split",children:"split"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'function diff.split(str: string, mode?: "char"|"line")\n  -> table<integer, string>\n'})}),"\n",(0,s.jsx)(n.p,{children:"Split a string by the given mode ready for consumption by diff.diff(...)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'mode:\n    | "char"\n    | "line"\n'})}),"\n",(0,s.jsx)(n.hr,{})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);