"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7083],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(96540);const r={},a=i.createContext(r);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:n},e.children)}},34442:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"developer-guide/introduction","title":"Introduction","description":"An introduction about Pragtical\'s concepts and how they tie in to plugin development.","source":"@site/docs/developer-guide/introduction.md","sourceDirName":"developer-guide","slug":"/developer-guide/introduction","permalink":"/docs/developer-guide/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/pragtical/pragtical.github.io/edit/main/docs/developer-guide/introduction.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"description":"An introduction about Pragtical\'s concepts and how they tie in to plugin development."},"sidebar":"tutorialSidebar","previous":{"title":"Developer Guide","permalink":"/docs/category/developer-guide"},"next":{"title":"Syntaxes and Themes","permalink":"/docs/category/syntaxes-and-themes"}}');var r=t(74848),a=t(28453);const o={sidebar_position:1,description:"An introduction about Pragtical's concepts and how they tie in to plugin development."},s="Introduction",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Types of plugins",id:"types-of-plugins",level:2},{value:"Tips and tricks",id:"tips-and-tricks",level:2},{value:"The repl and run commands",id:"the-repl-and-run-commands",level:3},{value:"Interactive debugging",id:"interactive-debugging",level:3},{value:"Differing stack traces on a critical error",id:"differing-stack-traces-on-a-critical-error",level:3},{value:"<code>print()</code> function many not work in Windows",id:"print-function-many-not-work-in-windows",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,r.jsxs)(n.p,{children:["Pragtical has little functionalities without plugins \u2014\nanything that can be implemented as plugins can and ",(0,r.jsx)(n.em,{children:"will"})," be implemented as one."]}),"\n",(0,r.jsxs)(n.p,{children:["Pragtical is mostly written in Lua.\nIf you want to write plugins, you need to know how to write Lua.\nThere are various resources such as the ",(0,r.jsx)(n.a,{href:"https://www.lua.org/manual/5.4/",children:"Lua 5.4 Reference Manual"}),",\n",(0,r.jsx)(n.a,{href:"https://www.lua.org/pil/",children:"Programming in Lua"}),", ",(0,r.jsx)(n.a,{href:"https://tylerneylon.com/a/learn-lua/",children:"Learn Lua in 15 Minutes"}),",\n",(0,r.jsx)(n.a,{href:"http://www.tutorialspoint.com/lua/lua_overview.htm",children:"Lua Tutorial at TutorialsPoint"})," and ",(0,r.jsx)(n.a,{href:"http://lua-users.org/wiki/LuaTutorial",children:"Lua Tutorial at lua-users.org"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"You will also need general programming knowledge and some experience with\nobject-oriented programming."}),"\n",(0,r.jsx)(n.admonition,{title:"Some of these tutorials target older versions of Lua and may be less relevant.",type:"note"}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["Pragtical is a fork of ",(0,r.jsx)(n.a,{href:"https://github.com/rxi/lite",children:"lite"}),".\nAs such, a lot of concepts used in lite is inherited in Pragtical.\n",(0,r.jsx)(n.a,{href:"https://rxi.github.io/lite_an_implementation_overview.html",children:"Lite: An Implementation Overview"})," is an excellent article that explains\nmany concepts about lite."]}),"\n",(0,r.jsx)(n.h2,{id:"types-of-plugins",children:"Types of plugins"}),"\n",(0,r.jsxs)(n.p,{children:["There are a few types of plugins.\nSyntaxes and colors are considered as subset of plugins.\nThese subsets of plugins only interact with the syntax highlighter\nand the ",(0,r.jsx)(n.code,{children:"style"})," table respectively."]}),"\n",(0,r.jsx)(n.h2,{id:"tips-and-tricks",children:"Tips and tricks"}),"\n",(0,r.jsx)(n.p,{children:"Here are some tips for plugin developers."}),"\n",(0,r.jsx)(n.h3,{id:"the-repl-and-run-commands",children:"The repl and run commands"}),"\n",(0,r.jsxs)(n.p,{children:["Pragtical has a built-in ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop",children:"REPL"})," that you can access directly from the\nterminal. It becomes really handy when you want to test bits of code, it has\nback history and completion support to make it more convenient."]}),"\n",(0,r.jsx)("video",{autoplay:!0,muted:!0,loop:!0,style:{width:"100%"},controls:!0,children:(0,r.jsx)("source",{src:"https://github.com/user-attachments/assets/ec9491b9-3f80-4d14-9f1e-29544942e2b0"})}),"\n",(0,r.jsxs)(n.p,{children:["You can also quickly run lua files against the pragtical runtime by using the\n",(0,r.jsx)(n.code,{children:"run"})," command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"pragtical run my_lua_file.lua\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or directly evaluate a lua snippet:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"pragtical run -e 'print \"hello world!\"'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"interactive-debugging",children:"Interactive debugging"}),"\n",(0,r.jsxs)(n.p,{children:["Other than using GDB to debug the C part of Pragtical,\nyou can also debug the Lua part with ",(0,r.jsx)(n.a,{href:"https://github.com/pragtical/plugins/blob/master/plugins/lite-debugger.lua?raw=1",children:"lite-debugger"}),".\nTo use the debugger, install it as a plugin and call\n",(0,r.jsx)(n.code,{children:'command.perform "debugger:break"'})," to stop the VM and\nstart debugging interactively."]}),"\n",(0,r.jsx)(n.h3,{id:"differing-stack-traces-on-a-critical-error",children:"Differing stack traces on a critical error"}),"\n",(0,r.jsxs)(n.p,{children:["On an older version of Pragtical, the stack trace printed on the terminal\nwhen a critical error occur may differ with the stack trace printed\nin ",(0,r.jsx)(n.code,{children:"error.txt"}),".\nIn this case, the stack trace in ",(0,r.jsx)(n.code,{children:"error.txt"})," is more complete and\nshould be referred.\nThis is a bug and will be fixed in future versions of Pragtical."]}),"\n",(0,r.jsxs)(n.h3,{id:"print-function-many-not-work-in-windows",children:[(0,r.jsx)(n.code,{children:"print()"})," function many not work in Windows"]}),"\n",(0,r.jsx)(n.admonition,{title:"Since v3.2.0, console output works on Windows without the instructions below.",type:"note"}),"\n",(0,r.jsx)(n.p,{children:"On Windows, we compile Pragtical using the GUI subsystem by default.\nThis causes Pragtical to close the stdout.\nTo work around this behavior, you can force Pragtical to keep\nstdout open by redirecting its output in a terminal."}),"\n",(0,r.jsx)(n.p,{children:"On PowerShell:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"./pragtical | tee -variable null\n"})}),"\n",(0,r.jsxs)(n.p,{children:["On ",(0,r.jsx)(n.code,{children:"cmd.exe"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-batch",children:"./pragtical > NUL\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);