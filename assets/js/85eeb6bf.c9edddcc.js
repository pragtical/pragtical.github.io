"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9676],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var d=i(96540);const s={},t=d.createContext(s);function c(e){const n=d.useContext(t);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),d.createElement(t.Provider,{value:n},e.children)}},41655:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"developer-guide/writing-plugins/cli","title":"CLI Interface","description":"Learn to extend the cli to add your own commands.","source":"@site/docs/developer-guide/writing-plugins/cli.md","sourceDirName":"developer-guide/writing-plugins","slug":"/developer-guide/writing-plugins/cli","permalink":"/docs/developer-guide/writing-plugins/cli","draft":false,"unlisted":false,"editUrl":"https://github.com/pragtical/pragtical.github.io/edit/main/docs/developer-guide/writing-plugins/cli.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"description":"Learn to extend the cli to add your own commands."},"sidebar":"tutorialSidebar","previous":{"title":"Coroutines","permalink":"/docs/developer-guide/writing-plugins/coroutines"},"next":{"title":"Simple Plugin","permalink":"/docs/developer-guide/writing-plugins/simple-plugin"}}');var s=i(74848),t=i(28453);const c={sidebar_position:5,description:"Learn to extend the cli to add your own commands."},r="CLI Interface",l={},o=[{value:"Registering Custom Commands",id:"registering-custom-commands",level:2},{value:"Basic Template",id:"basic-template",level:3},{value:"Command Table Fields",id:"command-table-fields",level:3},{value:"Flags",id:"flags",level:3},{value:"Subcommands",id:"subcommands",level:2},{value:"Setting the Default Command",id:"setting-the-default-command",level:2},{value:"Unregistering a Command",id:"unregistering-a-command",level:3},{value:"API Documentation",id:"api-documentation",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"cli-interface",children:"CLI Interface"})}),"\n",(0,s.jsx)(n.p,{children:"Pragtical includes a flexible and extensible command-line interface that\nallows users to interact with the editor or invoke tools programmatically.\nAs a plugin developer you can extend the CLI to provide custom commands related\nto the plugin you are developing."}),"\n",(0,s.jsx)(n.p,{children:"This guide explains how to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Register new commands"}),"\n",(0,s.jsx)(n.li,{children:"Add flags and arguments"}),"\n",(0,s.jsx)(n.li,{children:"Implement command logic"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"registering-custom-commands",children:"Registering Custom Commands"}),"\n",(0,s.jsxs)(n.p,{children:["To register a custom command, call ",(0,s.jsx)(n.code,{children:"cli.register(command: core.cli.command)"}),"\nwith the command table."]}),"\n",(0,s.jsx)(n.h3,{id:"basic-template",children:"Basic Template"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'local cli = require "core.cli"\n\ncli.register {\n  command = "mycmd",\n  description = "What this command does",\n  usage = "<arg1> [arg2]",\n  min_arguments = 1,\n  max_arguments = 2,\n  flags = {\n    {\n      name = "force",\n      short_name = "f",\n      description = "Force action",\n      type = "boolean"\n    },\n    {\n      name = "tags",\n      short_name = "t",\n      description = "Comma-separated tags",\n      type = "list"\n    }\n  },\n  arguments = {\n    arg1 = "First argument description",\n    arg2 = "Optional second argument"\n  },\n  execute = function(flags, args)\n    -- Process logic\n    print("Custom command executed!")\n  end\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"command-table-fields",children:"Command Table Fields"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"command"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The subcommand name"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"description"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"Short description shown in help/list"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"long_description"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string?"})}),(0,s.jsx)(n.td,{children:"Optional multiline help section"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"usage"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string?"})}),(0,s.jsx)(n.td,{children:"Usage string shown in help"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"min_arguments"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"integer?"})}),(0,s.jsx)(n.td,{children:"Minimum number of arguments"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"max_arguments"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"integer"})}),(0,s.jsxs)(n.td,{children:["Max number of arguments (",(0,s.jsx)(n.code,{children:"-1"})," for unlimited)"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"flags"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"core.cli.flag[]?"})}),(0,s.jsx)(n.td,{children:"Array of supported flags"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"arguments"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"table<string,string>?"})}),(0,s.jsx)(n.td,{children:"Argument names and their descriptions"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"execute"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"function(flags, args)"})}),(0,s.jsx)(n.td,{children:"Function to call when invoked"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"exit_editor"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"boolean"})," (default: ",(0,s.jsx)(n.code,{children:"true"}),")"]}),(0,s.jsx)(n.td,{children:"Whether to exit the editor after executing the command"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"flags",children:"Flags"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:["Long flag name (e.g. ",(0,s.jsx)(n.code,{children:"verbose"})," for ",(0,s.jsx)(n.code,{children:"--verbose"}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"short_name"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:["Short name (e.g. ",(0,s.jsx)(n.code,{children:"v"})," for ",(0,s.jsx)(n.code,{children:"-v"}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"description"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"Description shown in help"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"type"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:'"empty"'}),"|..."]}),(0,s.jsxs)(n.td,{children:["Type: ",(0,s.jsx)(n.code,{children:'"empty"'}),", ",(0,s.jsx)(n.code,{children:'"string"'}),", ",(0,s.jsx)(n.code,{children:'"number"'}),", ",(0,s.jsx)(n.code,{children:'"boolean"'}),", ",(0,s.jsx)(n.code,{children:'"list"'})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"value"})}),(0,s.jsx)(n.td,{children:"any"}),(0,s.jsx)(n.td,{children:"Assigned value (populated during parsing)"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"subcommands",children:"Subcommands"}),"\n",(0,s.jsxs)(n.p,{children:["Commands can have nested subcommands using the subcommands field. Each\nsubcommand is itself a ",(0,s.jsx)(n.code,{children:"core.cli.command"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'cli.register {\n  command = "tool",\n  description = "Main tool command",\n  subcommands = {\n    {\n      command = "clean",\n      description = "Cleans stuff",\n      execute = function() print("Cleaning") end\n    },\n    {\n      command = "build",\n      description = "Builds stuff",\n      execute = function() print("Building") end\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Usage:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"pragtical tool clean\npragtical tool build\n"})}),"\n",(0,s.jsx)(n.h2,{id:"setting-the-default-command",children:"Setting the Default Command"}),"\n",(0,s.jsx)(n.p,{children:"The default command runs when no subcommand is given, while not advised\nyou even have the ability to override or extend it:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'--- Modify the core one\ntable.insert(cli.commands.default.flags, {\n  name = "myflag",\n  short_name = "m",\n  description = "Some custom flag"\n})\n\nlocal old_execute = cli.commands.default.execute\ncli.commands.default.execute = function(flags, args)\n    -- do something custom here\n    old_execute(flags, args) -- call into original execute\nend\n\n--- Replaces it entirely\ncli.set_default {\n  flags = {\n    {\n      name = "debug",\n      short_name = "d",\n      description = "Enable debug mode",\n      type = "boolean"\n    }\n  },\n  execute = function(flags, args)\n    print("Running default logic")\n  end\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"unregistering-a-command",children:"Unregistering a Command"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'cli.unregister("mycmd")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"api-documentation",children:"API Documentation"}),"\n",(0,s.jsxs)(n.p,{children:["More details about the CLI interface can be seen on the\n",(0,s.jsx)(n.a,{href:"/docs/api/core.cli",children:"core.cli"})," API page."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);