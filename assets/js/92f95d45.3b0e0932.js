"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9299],{11470:(e,n,s)=>{s.d(n,{A:()=>w});var t=s(96540),i=s(34164),l=s(23104),r=s(56347),a=s(205),o=s(57485),c=s(31682),d=s(70679);function u(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:s}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:s,default:t}})=>({value:e,label:n,attributes:s,default:t}))}(s);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function g({queryString:e=!1,groupId:n}){const s=(0,r.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(i),(0,t.useCallback)(e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace({...s.location,search:n.toString()})},[i,s])]}function m(e){const{defaultValue:n,queryString:s=!1,groupId:i}=e,l=h(e),[r,o]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find(e=>e.default)??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:l})),[c,u]=g({queryString:s,groupId:i}),[m,x]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,i]=(0,d.Dv)(n);return[s,(0,t.useCallback)(e=>{n&&i.set(e)},[n,i])]}({groupId:i}),j=(()=>{const e=c??m;return p({value:e,tabValues:l})?e:null})();(0,a.A)(()=>{j&&o(j)},[j]);return{selectedValue:r,selectValue:(0,t.useCallback)(e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),x(e)},[u,x,l]),tabValues:l}}var x=s(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=s(74848);function v({className:e,block:n,selectedValue:s,selectValue:t,tabValues:r}){const a=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.a_)(),c=e=>{const n=e.currentTarget,i=a.indexOf(n),l=r[i].value;l!==s&&(o(n),t(l))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const s=a.indexOf(e.currentTarget)+1;n=a[s]??a[0];break}case"ArrowLeft":{const s=a.indexOf(e.currentTarget)-1;n=a[s]??a[a.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:r.map(({value:e,label:n,attributes:t})=>(0,f.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{a.push(e)},onKeyDown:d,onClick:c,...t,className:(0,i.A)("tabs__item",j.tabItem,t?.className,{"tabs__item--active":s===e}),children:n??e},e))})}function b({lazy:e,children:n,selectedValue:s}){const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=l.find(e=>e.props.value===s);return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s}))})}function y(e){const n=m(e);return(0,f.jsxs)("div",{className:(0,i.A)("tabs-container",j.tabList),children:[(0,f.jsx)(v,{...n,...e}),(0,f.jsx)(b,{...n,...e})]})}function w(e){const n=(0,x.A)();return(0,f.jsx)(y,{...e,children:u(e.children)},String(n))}},19365:(e,n,s)=>{s.d(n,{A:()=>r});s(96540);var t=s(34164);const i={tabItem:"tabItem_Ymn6"};var l=s(74848);function r({children:e,hidden:n,className:s}){return(0,l.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,s),hidden:n,children:e})}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(96540);const i={},l=t.createContext(i);function r(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(l.Provider,{value:n},e.children)}},75886:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"user-guide/lsp","title":"Language Server Support","description":"Configuring Language Servers for Intellisense in Pragtical.","source":"@site/docs/user-guide/lsp.md","sourceDirName":"user-guide","slug":"/user-guide/lsp","permalink":"/docs/user-guide/lsp","draft":false,"unlisted":false,"editUrl":"https://github.com/pragtical/pragtical.github.io/edit/main/docs/user-guide/lsp.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"description":"Configuring Language Servers for Intellisense in Pragtical."},"sidebar":"tutorialSidebar","previous":{"title":"Command Line Interface","permalink":"/docs/user-guide/cli"},"next":{"title":"Setup Pragtical as an IDE","permalink":"/docs/user-guide/ide-setup"}}');var i=s(74848),l=s(28453),r=s(11470),a=s(19365);const o={sidebar_position:7,description:"Configuring Language Servers for Intellisense in Pragtical."},c="Language Server Support",d={},u=[{value:"Installation",id:"installation",level:2},{value:"Installing Language Servers",id:"installing-language-servers",level:2},{value:"Manual Installation",id:"manual-installation",level:3},{value:"Set Up",id:"set-up",level:2},{value:"Features",id:"features",level:2},{value:"Enhanced Autocomplete",id:"enhanced-autocomplete",level:3},{value:"Symbols Tree",id:"symbols-tree",level:3},{value:"Snippets",id:"snippets",level:3},{value:"Inline Diagnostics",id:"inline-diagnostics",level:3},{value:"Symbol Search",id:"symbol-search",level:3},{value:"Tooltips",id:"tooltips",level:3},{value:"Symbol Renaming",id:"symbol-renaming",level:3},{value:"Go to Definition",id:"go-to-definition",level:3},{value:"Find References",id:"find-references",level:3},{value:"Document Formatting",id:"document-formatting",level:3},{value:"Diagnostics",id:"diagnostics",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Enable Debug Logging",id:"enable-debug-logging",level:3},{value:"Language Servers not starting",id:"language-servers-not-starting",level:3},{value:"jdt.ls launches Microsoft Store",id:"jdtls-launches-microsoft-store",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"language-server-support",children:"Language Server Support"})}),"\n",(0,i.jsxs)(n.p,{children:['Many text editors come equipped with "Intellisense" features such as error\nreporting, smart autocompletion, formatting, and linting\u2014thanks to a language\nserver client. The ',(0,i.jsx)(n.a,{href:"https://microsoft.github.io/language-server-protocol/",children:"Language Server Protocol"})," (LSP), developed by Microsoft,\nenables the creation of tools that operate independently from editors,\nin contrast to traditional IDEs where tools are tightly integrated."]}),"\n",(0,i.jsxs)(n.p,{children:["While Pragtical does not include a built-in language server client, you can\naccess this functionality through the ",(0,i.jsx)(n.a,{href:"https://github.com/pragtical/lsp",children:"LSP"})," plugin. In this article, we will\nguide you through the process of setting up language servers for use with\nthe plugin."]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:"The LSP plugin can be installed like any other plugin."}),"\n",(0,i.jsxs)(n.p,{children:["The LSP plugin optionally depends on ",(0,i.jsx)(n.a,{href:"https://github.com/liquid600pgm/lintplus",children:"lint+"})," for inline diagnostics and\n",(0,i.jsx)(n.a,{href:"https://github.com/vqns/lite-xl-snippets",children:"lsp_snippets"})," for autocompletion snippets support. When installing the plugin\nmanually, you may also install these plugins as well."]}),"\n",(0,i.jsxs)(r.A,{groupId:"package-manager",children:[(0,i.jsxs)(a.A,{value:"ppm",label:"ppm",default:!0,children:[(0,i.jsx)(n.p,{children:"To install PPM via the command line, run:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"$ ppm plugin install lsp\n# or\n$ pragtical pm plugin install lsp\n"})})]}),(0,i.jsxs)(a.A,{value:"miq",label:"Miq",children:[(0,i.jsxs)(n.p,{children:["To install LSP via Miq, add ",(0,i.jsx)(n.code,{children:"pragtical/lsp"})," into your ",(0,i.jsx)(n.code,{children:"config.plugins.miq.plugins"}),":"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"local config = require \"core.config\"\nconfig.plugins.miq.plugins = {\n-- this allows Miq to manage itself\n'TorchedSammy/Miq',\n\n-- install lsp\n'pragtical/lsp',\n}\n"})}),(0,i.jsxs)(n.p,{children:["Afterwards, run the command ",(0,i.jsx)(n.code,{children:"miq:install"})," to begin installation."]})]}),(0,i.jsxs)(a.A,{value:"manual",label:"Manual Installation",children:[(0,i.jsx)(n.p,{children:"To install the LSP plugin manually, run these commands:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"$ cd ~/.config/pragtical/\n$ git clone https://github.com/pragtical/lsp plugins/lsp\n$ git clone https://github.com/liquidev/lintplus plugins/lintplus\n$ wget https://raw.githubusercontent.com/vqns/lite-xl-snippets/main/snippets.lua \\\n    -O plugins/snippets.lua\n$ wget https://raw.githubusercontent.com/vqns/lite-xl-snippets/main/lsp_snippets.lua \\\n    -O plugins/lsp_snippets.lua\n"})}),(0,i.jsx)(n.p,{children:"They install the plugin with all its dependencies."})]})]}),"\n",(0,i.jsx)(n.h2,{id:"installing-language-servers",children:"Installing Language Servers"}),"\n",(0,i.jsxs)(n.p,{children:["The LSP plugin requires language servers to be installed on the system to function.\nSome editors such as ",(0,i.jsx)(n.a,{href:"https://code.visualstudio.com/",children:"Visual Studio Code"})," and ",(0,i.jsx)(n.a,{href:"https://neovim.io/",children:"Neovim"})," tends to have this process\nabstracted by plugins. Luckily, some commonly-used language servers are provided\nas plugins as well, prefixed with ",(0,i.jsx)(n.code,{children:"lsp_"}),"."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Plugin"}),(0,i.jsx)(n.th,{children:"Language(s)"}),(0,i.jsx)(n.th,{children:"Server"}),(0,i.jsx)(n.th,{children:"Platforms"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/adamharrison/lite-xl-lsp-servers/blob/master/plugins/lsp_c.lua?raw=1",children:"lsp_c"})}),(0,i.jsx)(n.td,{children:"C, C++, Objective-C"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://clangd.llvm.org/",children:"clangd"})}),(0,i.jsx)(n.td,{children:"Linux, macOS, Windows"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/adamharrison/lite-xl-lsp-servers/blob/master/plugins/lsp_lua.lua?raw=1",children:"lsp_lua"})}),(0,i.jsx)(n.td,{children:"Lua"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://luals.github.io/",children:"LuaLS"})}),(0,i.jsx)(n.td,{children:"Linux, macOS, Windows"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/adamharrison/lite-xl-lsp-servers/blob/master/plugins/lsp_python.lua?raw=1",children:"lsp_python"})}),(0,i.jsx)(n.td,{children:"Python"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/Microsoft/pyright",children:"Pyright"})}),(0,i.jsx)(n.td,{children:"Linux, macOS, Windows"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/adamharrison/lite-xl-lsp-servers/blob/master/plugins/lsp_quicklintjs.lua?raw=1",children:"lsp_quicklintjs"})}),(0,i.jsx)(n.td,{children:"JavaScript"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://quick-lint-js.com/",children:"quick-lint-js"})}),(0,i.jsx)(n.td,{children:"Linux, macOS, Windows"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/adamharrison/lite-xl-lsp-servers/blob/master/plugins/lsp_rust.lua?raw=1",children:"lsp_rust"})}),(0,i.jsx)(n.td,{children:"Rust"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/rust-lang/rust-analyzer",children:"rust-analyzer"})}),(0,i.jsx)(n.td,{children:"Linux, macOS, Windows"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/adamharrison/lite-xl-lsp-servers/blob/master/plugins/lsp_tex.lua?raw=1",children:"lsp_tex"})}),(0,i.jsx)(n.td,{children:"TeX"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/latex-lsp/texlab",children:"texlab"})}),(0,i.jsx)(n.td,{children:"Linux, macOS, Windows"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/adamharrison/lite-xl-lsp-servers/blob/master/plugins/lsp_zig.lua?raw=1",children:"lsp_zig"})}),(0,i.jsx)(n.td,{children:"Zig"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://install.zigtools.org/",children:"zls"})}),(0,i.jsx)(n.td,{children:"Linux, macOS, Windows"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"manual-installation",children:"Manual Installation"}),"\n",(0,i.jsxs)(n.p,{children:["The LSP plugin expects language servers to be accessible in ",(0,i.jsx)(n.code,{children:"PATH"}),". If you have\ninstalled the language server from package managers such as ",(0,i.jsx)(n.code,{children:"npm"})," and ",(0,i.jsx)(n.code,{children:"pip"}),",\nplease ensure that ",(0,i.jsxs)(n.strong,{children:["their local installation directory is in ",(0,i.jsx)(n.code,{children:"PATH"})]}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Extra attention is required for users of Node.js version managers like ",(0,i.jsx)(n.a,{href:"https://github.com/nvm-sh/nvm",children:"nvm"}),",\nas the npm prefix can change when switching between Node.js versions. Always\nensure you ",(0,i.jsx)(n.strong,{children:"launch Pragtical after sourcing nvm"}),". This applies to all of\nPragtical's desktop entries as well."]})}),"\n",(0,i.jsx)(n.h2,{id:"set-up",children:"Set Up"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"If you installed the language servers via plugins, then you should skip this step."})}),"\n",(0,i.jsxs)(n.p,{children:["The LSP plugin offers default configurations for most language servers\n(inspired by ",(0,i.jsx)(n.a,{href:"https://github.com/neovim/nvim-lspconfig",children:"nvim-lspconfig"}),"). You can access these configurations by requiring\n",(0,i.jsx)(n.code,{children:"plugins.lsp.config"})," in your user module. For instance, to configure the\n",(0,i.jsx)(n.a,{href:"https://github.com/typescript-language-server/typescript-language-server",children:"typescript-language-server"}),", you can do the following:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local lspconfig = require "plugins.lsp.config"\n\n-- set up typescript-language-server with default configuration (enough for most people)\nlspconfig.tsserver.setup()\n\n-- override the default configuration\nlspconfig.tsserver.setup {\n    verbose = false\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(n.p,{children:["Once you have configured your language server, you should see a log message\nformatted as ",(0,i.jsx)(n.code,{children:"[LSP] starting (language server name)"}),", followed by\n",(0,i.jsx)(n.code,{children:"[(language server name)] Initialized"})," when you open a file supported by that\nlanguage server. These messages confirm that the language server is correctly\nset up and actively running for the document."]}),"\n",(0,i.jsx)(n.h3,{id:"enhanced-autocomplete",children:"Enhanced Autocomplete"}),"\n",(0,i.jsxs)(n.p,{children:["One of the most prominent features of a language server is to provide\nautocomplete suggestions. The LSP plugin integrates with the ",(0,i.jsx)(n.a,{href:"https://github.com/pragtical/pragtical/blob/master/data/plugins/autocomplete.lua",children:"autocomplete"}),"\nplugin to provide this functionality."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/img/user-guide/lsp/autocomplete.png",alt:"lsp-autocomplete"})}),"\n",(0,i.jsx)(n.h3,{id:"symbols-tree",children:"Symbols Tree"}),"\n",(0,i.jsx)(n.p,{children:"A handy feature of the LSP plugin is the symbols tree, which allows for quick\nnavigation within a file while reducing the cognitive load needed to comprehend\nthe structure of the source code."}),"\n",(0,i.jsx)("video",{autoplay:!0,muted:!0,loop:!0,style:{width:"100%"},controls:!0,children:(0,i.jsx)("source",{src:"/videos/user-guide/lsp/symbols-tree.mp4"})}),"\n",(0,i.jsx)(n.h3,{id:"snippets",children:"Snippets"}),"\n",(0,i.jsxs)(n.p,{children:["When installed with ",(0,i.jsx)(n.a,{href:"https://github.com/vqns/lite-xl-snippets",children:"lsp_snippets"}),", the LSP plugin is able to provide snippets\nfrom language servers. The snippets are also integrated with the ",(0,i.jsx)(n.a,{href:"https://github.com/pragtical/pragtical/blob/master/data/plugins/autocomplete.lua",children:"autocomplete"}),"\nplugin."]}),"\n",(0,i.jsx)("video",{autoplay:!0,muted:!0,loop:!0,style:{width:"100%"},controls:!0,children:(0,i.jsx)("source",{src:"/videos/user-guide/lsp/snippets.mp4"})}),"\n",(0,i.jsx)(n.h3,{id:"inline-diagnostics",children:"Inline Diagnostics"}),"\n",(0,i.jsxs)(n.p,{children:["When installed with ",(0,i.jsx)(n.a,{href:"https://github.com/liquid600pgm/lintplus",children:"lint+"}),", the LSP plugin will show diagnostics on the\naffected lines. You can disable this with ",(0,i.jsx)(n.code,{children:"lsp:toggle-diagnostics"}),"\n(",(0,i.jsx)("kbd",{children:"shift+alt+e"}),")."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/img/user-guide/lsp/inline-diagnostics.png",alt:"lsp-inline-diagnostics"})}),"\n",(0,i.jsx)(n.h3,{id:"symbol-search",children:"Symbol Search"}),"\n",(0,i.jsxs)(n.p,{children:["To view all symbols in a file, you can use ",(0,i.jsx)(n.code,{children:"lsp:view-document-symbols"}),"\n(",(0,i.jsx)("kbd",{children:"alt+s"}),"). You can use ",(0,i.jsx)(n.code,{children:"lsp:find-workspace-symbol"}),"\n(",(0,i.jsx)("kbd",{children:"shift+alt+s"}),") to find a symbol in the current workspace."]}),"\n",(0,i.jsx)("video",{autoplay:!0,muted:!0,loop:!0,style:{width:"100%"},controls:!0,children:(0,i.jsx)("source",{src:"/videos/user-guide/lsp/view-symbol.mp4"})}),"\n",(0,i.jsx)("video",{autoplay:!0,muted:!0,loop:!0,style:{width:"100%"},controls:!0,children:(0,i.jsx)("source",{src:"/videos/user-guide/lsp/search-symbol.mp4"})}),"\n",(0,i.jsx)(n.h3,{id:"tooltips",children:"Tooltips"}),"\n",(0,i.jsx)(n.p,{children:"You can hover on symbols to check their types and descriptions."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/img/user-guide/lsp/hover.png",alt:"lsp-hover"})}),"\n",(0,i.jsx)(n.p,{children:"Tooltips will also appear when entering function arguments."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/img/user-guide/lsp/args.png",alt:"lsp-args"})}),"\n",(0,i.jsx)(n.h3,{id:"symbol-renaming",children:"Symbol Renaming"}),"\n",(0,i.jsxs)(n.p,{children:["Select the symbol to refactor, press ",(0,i.jsx)("kbd",{children:"alt+r"})," to enter new name,\nconfirm changes and apply."]}),"\n",(0,i.jsx)("video",{autoplay:!0,muted:!0,loop:!0,style:{width:"100%"},controls:!0,children:(0,i.jsx)("source",{src:"/videos/user-guide/lsp/rename.mp4"})}),"\n",(0,i.jsx)(n.h3,{id:"go-to-definition",children:"Go to Definition"}),"\n",(0,i.jsxs)(n.p,{children:["Press ",(0,i.jsx)("kbd",{children:"alt+d"})," to jump to definition."]}),"\n",(0,i.jsx)("video",{autoplay:!0,muted:!0,loop:!0,style:{width:"100%"},controls:!0,children:(0,i.jsx)("source",{src:"/videos/user-guide/lsp/goto-definitions.mp4"})}),"\n",(0,i.jsx)(n.h3,{id:"find-references",children:"Find References"}),"\n",(0,i.jsxs)(n.p,{children:["Press ",(0,i.jsx)("kbd",{children:"alt+f"})," to find references to a symbol."]}),"\n",(0,i.jsx)("video",{autoplay:!0,muted:!0,loop:!0,style:{width:"100%"},controls:!0,children:(0,i.jsx)("source",{src:"/videos/user-guide/lsp/find-references.mp4"})}),"\n",(0,i.jsx)(n.h3,{id:"document-formatting",children:"Document Formatting"}),"\n",(0,i.jsxs)(n.p,{children:["Press ",(0,i.jsx)("kbd",{children:"alt+shift+f"})," to format the current document."]}),"\n",(0,i.jsx)("video",{autoplay:!0,muted:!0,loop:!0,style:{width:"100%"},controls:!0,children:(0,i.jsx)("source",{src:"/videos/user-guide/lsp/format.mp4"})}),"\n",(0,i.jsx)(n.h3,{id:"diagnostics",children:"Diagnostics"}),"\n",(0,i.jsxs)(n.p,{children:["Press ",(0,i.jsx)("kbd",{children:"alt+e"})," to view diagnostics messages for the current document.\nPress ",(0,i.jsx)("kbd",{children:"ctrl+alt+e"})," to view diagnostics messages for the workspace."]}),"\n",(0,i.jsx)("video",{autoplay:!0,muted:!0,loop:!0,style:{width:"100%"},controls:!0,children:(0,i.jsx)("source",{src:"/videos/user-guide/lsp/view-doc-diagnostics.mp4"})}),"\n",(0,i.jsx)("video",{autoplay:!0,muted:!0,loop:!0,style:{width:"100%"},controls:!0,children:(0,i.jsx)("source",{src:"/videos/user-guide/lsp/view-all-diagnostics.mp4"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsxs)(n.p,{children:["We are constantly updating the LSP plugin to fix bugs, add features and improve\nperformance. If you encounter any issues, you should\n",(0,i.jsx)(n.strong,{children:"always update to the latest version"})," before trying other steps."]}),"\n",(0,i.jsx)(n.h3,{id:"enable-debug-logging",children:"Enable Debug Logging"}),"\n",(0,i.jsxs)(n.p,{children:["If you encounter an error message such as\n",(0,i.jsx)(n.code,{children:"[LSP] (language server name) was shutdown, revise your configuration"}),",\nyou should try to enable debug logging to see what is happening when the\nlanguage server is run."]}),"\n",(0,i.jsxs)(n.p,{children:["This is very useful on Windows as the plugin runs the language server with\n",(0,i.jsx)(n.code,{children:"cmd.exe"})," (to work around wrappers like those provided by npm) and this can\ncause errors to never propagate back to the plugin."]}),"\n",(0,i.jsxs)(r.A,{groupId:"configuration",children:[(0,i.jsxs)(a.A,{value:"user-module",label:"User Module",default:!0,children:[(0,i.jsx)(n.p,{children:"In your user module, add:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"config.plugins.lsp.log_server_stderr = true\n"})})]}),(0,i.jsxs)(a.A,{value:"settings-ui",label:"Settings UI",children:[(0,i.jsx)(n.p,{children:'Navigate to the "Plugins" tab. Under the "Language Server Protocol" section,\nenable "Log Standard Error".'}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/img/user-guide/lsp/debug-logging.png",alt:"lsp-debug-logging"})})]})]}),"\n",(0,i.jsx)(n.h3,{id:"language-servers-not-starting",children:"Language Servers not starting"}),"\n",(0,i.jsxs)(n.p,{children:["There are many reasons why a language server will not launch, the most common\nbeing the plugin cannot find the language server in ",(0,i.jsx)(n.code,{children:"PATH"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["On Windows, this often manifests as\n",(0,i.jsx)(n.code,{children:"(language server name) is not recognized as an internal or external command, operable program or batch file."}),".\nThe LSP plugin uses ",(0,i.jsx)(n.code,{children:"cmd.exe"})," on Windows to launch the language server in order\nto work around different file extensions such as ",(0,i.jsx)(n.code,{children:".cmd"}),", ",(0,i.jsx)(n.code,{children:".bat"})," and ",(0,i.jsx)(n.code,{children:".exe"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["To solve this issue, make sure that the language server is on ",(0,i.jsx)(n.code,{children:"PATH"}),".\nFor non-native language servers (e.g. typescript-language-server), make sure\ntheir installation path with respect to the package managers are on ",(0,i.jsx)(n.code,{children:"PATH"})," as\nwell. For npm, this is usually ",(0,i.jsx)(n.code,{children:"AppData\\Roaming\\npm"})," on Windows."]}),"\n",(0,i.jsx)(n.h3,{id:"jdtls-launches-microsoft-store",children:"jdt.ls launches Microsoft Store"}),"\n",(0,i.jsxs)(n.p,{children:["If you've installed ",(0,i.jsx)(n.a,{href:"https://github.com/eclipse-jdtls/eclipse.jdt.ls",children:"jdt.ls"})," from their website, you might run into issues where\nMicrosoft Store is launched instead of running the language server properly."]}),"\n",(0,i.jsxs)(n.p,{children:["jdt.ls seems to expect users to have Python installed, and Windows has app\nexecution aliases built in to redirect ",(0,i.jsx)(n.code,{children:"python.exe"})," and ",(0,i.jsx)(n.code,{children:"python3.exe"})," to\nMicrosoft Store."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/img/user-guide/win-execution-alias.png",alt:"win-execution-alias"})}),"\n",(0,i.jsxs)(n.p,{children:["To fix this, install ",(0,i.jsx)(n.a,{href:"https://www.python.org/",children:"Python"}),". Alternatively, you can follow the\n",(0,i.jsx)(n.a,{href:"https://github.com/eclipse-jdtls/eclipse.jdt.ls?tab=readme-ov-file#running-from-the-command-line",children:"instructions from jdt.ls"})," to run the language server without\nPython at all."]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);