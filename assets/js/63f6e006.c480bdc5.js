"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4273],{71523:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var l=i(85893),r=i(11151);const s={sidebar_position:10},t="repl",o={id:"api/repl",title:"repl",description:"Cross-platform readline like functionality.",source:"@site/docs/api/repl.md",sourceDirName:"api",slug:"/api/repl",permalink:"/docs/api/repl",draft:!1,unlisted:!1,editUrl:"https://github.com/pragtical/pragtical.github.io/edit/main/docs/api/repl.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"renwindow",permalink:"/docs/api/renwindow"},next:{title:"shmem",permalink:"/docs/api/shmem"}},a={},c=[{value:"repl.completion",id:"replcompletion",level:2},{value:"add",id:"add",level:3},{value:"add_completion",id:"add_completion",level:2},{value:"add_history",id:"add_history",level:2},{value:"clear_screen",id:"clear_screen",level:2},{value:"input",id:"input",level:2},{value:"load_history",id:"load_history",level:2},{value:"print_keycodes",id:"print_keycodes",level:2},{value:"save_history",id:"save_history",level:2},{value:"set_completion",id:"set_completion",level:2},{value:"set_history_max_len",id:"set_history_max_len",level:2},{value:"set_multiline",id:"set_multiline",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"repl",children:"repl"}),"\n",(0,l.jsx)(n.p,{children:"Cross-platform readline like functionality."}),"\n",(0,l.jsx)(n.p,{children:"Usage Example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"local line, err = repl.input(prompt)\nwhile line do\n  if #line \\> 0 then\n    repl.add_history(line)\n    repl.save_history(history) -- save every new line\n  end\n  line, err = repl.input(prompt)\nend\nif err then\n  print('An error occurred: ' .. err)\nend\n"})}),"\n",(0,l.jsx)(n.h2,{id:"replcompletion",children:"repl.completion"}),"\n",(0,l.jsx)(n.p,{children:"A repl completions list object"}),"\n",(0,l.jsx)(n.h3,{id:"add",children:"add"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"(method) repl.completion:add(str: string)\n"})}),"\n",(0,l.jsx)(n.p,{children:"Add a new string to the completions list."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"add_completion",children:"add_completion"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"function repl.add_completion(completions: repl.completion, str: string)\n"})}),"\n",(0,l.jsx)(n.p,{children:"Adds string to the list of completions.\nAll functions return nil on error; functions that don't have an obvious\nreturn value return true on success."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"add_history",children:"add_history"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"function repl.add_history(line: string)\n"})}),"\n",(0,l.jsx)(n.p,{children:"Adds line to the history list."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"clear_screen",children:"clear_screen"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"function repl.clear_screen()\n"})}),"\n",(0,l.jsx)(n.p,{children:"Clears the screen."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"input",children:"input"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"function repl.input(prompt: any)\n  -> line: string?\n  2. errmsg: string?\n"})}),"\n",(0,l.jsx)(n.p,{children:"Prompts for a line of input, using prompt as the prompt string.\nReturns nil if no more input is available;\nReturns nil and an error string if an error occurred."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"load_history",children:"load_history"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"function repl.load_history(filename: string)\n"})}),"\n",(0,l.jsx)(n.p,{children:"Loads the history list from filename."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"print_keycodes",children:"print_keycodes"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"function repl.print_keycodes()\n"})}),"\n",(0,l.jsx)(n.p,{children:"Prints repl key codes. Primarly used for debugging."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"save_history",children:"save_history"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"function repl.save_history(filename: string)\n"})}),"\n",(0,l.jsx)(n.p,{children:"Saves the history list to filename."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"set_completion",children:"set_completion"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"function repl.set_completion(callback: fun(completion: repl.completion, str: string))\n"})}),"\n",(0,l.jsx)(n.p,{children:"Sets the completion callback. This callback is called with two arguments:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["A completions object. Use object",":add"," or repl.add_completion to add a\ncompletion to this object."]}),"\n",(0,l.jsx)(n.li,{children:"The current line of input."}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"set_completion(function(completion,str)\n  if str == 'h' then\n    completion:add('help')\n    completion:add('halt')\n  end\nend)\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"set_history_max_len",children:"set_history_max_len"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"function repl.set_history_max_len(length: integer)\n"})}),"\n",(0,l.jsx)(n.p,{children:"Sets the history list size to length."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"set_multiline",children:"set_multiline"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"function repl.set_multiline(multiline: boolean)\n"})}),"\n",(0,l.jsx)(n.p,{children:"Enables multi-line mode if multiline is true, disables otherwise."}),"\n",(0,l.jsx)(n.hr,{})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>t});var l=i(67294);const r={},s=l.createContext(r);function t(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);