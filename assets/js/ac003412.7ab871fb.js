"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5235],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(96540);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}},38101:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"api/shmem","title":"shmem","description":"Functionality that allows to share data between processes.","source":"@site/docs/api/shmem.md","sourceDirName":"api","slug":"/api/shmem","permalink":"/docs/api/shmem","draft":false,"unlisted":false,"editUrl":"https://github.com/pragtical/pragtical.github.io/edit/main/docs/api/shmem.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12},"sidebar":"tutorialSidebar","previous":{"title":"repl","permalink":"/docs/api/repl"},"next":{"title":"string","permalink":"/docs/api/string"}}');var t=s(74848),a=s(28453);const i={sidebar_position:12},l="shmem",c={},o=[{value:"open",id:"open",level:2},{value:"__pairs",id:"__pairs",level:2},{value:"capacity",id:"capacity",level:2},{value:"clear",id:"clear",level:2},{value:"get",id:"get",level:2},{value:"remove",id:"remove",level:2},{value:"set",id:"set",level:2},{value:"size",id:"size",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"shmem",children:"shmem"})}),"\n",(0,t.jsx)(n.p,{children:"Functionality that allows to share data between processes."}),"\n",(0,t.jsx)(n.h2,{id:"open",children:"open"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"function shmem.open(namespace: string, capacity: integer)\n  -> shmem|nil\n  2. errmsg: string\n"})}),"\n",(0,t.jsx)(n.p,{children:"Open a shared memory container."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"__pairs",children:"__pairs"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"(method) shmem:__pairs()\n  -> function\n"})}),"\n",(0,t.jsx)(n.p,{children:"Implements the pairs metamethod for easy traversal of elements."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"capacity",children:"capacity"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"(method) shmem:capacity()\n  -> integer\n"})}),"\n",(0,t.jsx)(n.p,{children:"Maximum amount of elements the shared memory container can store."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"clear",children:"clear"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"(method) shmem:clear()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Remove all elements from the shared memory container."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"get",children:"get"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"(method) shmem:get(name_or_index: string|integer)\n  -> data: string?\n"})}),"\n",(0,t.jsx)(n.p,{children:"Retrieve the element data from the shared memory container."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"remove",children:"remove"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"(method) shmem:remove(name: string)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Removes the specified element from the shared memory container."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"set",children:"set"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"(method) shmem:set(name: string, value: string)\n  -> updated: boolean\n"})}),"\n",(0,t.jsx)(n.p,{children:"Adds or edits an existing element on the shared memory container."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"size",children:"size"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"(method) shmem:size()\n  -> integer\n"})}),"\n",(0,t.jsx)(n.p,{children:"The amount of elements residing on the shared memory container."}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);