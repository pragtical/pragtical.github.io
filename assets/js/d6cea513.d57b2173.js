"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7261],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>b});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(t),m=i,b=d["".concat(p,".").concat(m)]||d[m]||c[m]||l;return t?a.createElement(b,r(r({ref:n},u),{},{components:t})):a.createElement(b,r({ref:n},u))}));function b(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,r=new Array(l);r[0]=m;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[d]="string"==typeof e?e:i,r[1]=o;for(var s=2;s<l;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2896:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=t(7462),i=(t(7294),t(3905));const l={sidebar_position:5,description:"Build Pragtical from source code."},r="Build",o={unversionedId:"setup/building",id:"setup/building",title:"Build",description:"Build Pragtical from source code.",source:"@site/docs/setup/building.md",sourceDirName:"setup",slug:"/setup/building",permalink:"/docs/setup/building",draft:!1,editUrl:"https://github.com/pragtical/pragtical.github.io/tree/main/packages/create-docusaurus/templates/shared/docs/setup/building.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Build Pragtical from source code."},sidebar:"tutorialSidebar",previous:{title:"macOS",permalink:"/docs/setup/macos"},next:{title:"User Guide",permalink:"/docs/category/user-guide"}},p={},s=[{value:"Build Script",id:"build-script",level:2},{value:"Portable",id:"portable",level:2},{value:"Linux",id:"linux",level:2},{value:"macOS",id:"macos",level:2},{value:"Windows MSYS2",id:"windows-msys2",level:2}],u={toc:s},d="wrapper";function c(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"build"},"Build"),(0,i.kt)("p",null,"Once you have downloaded the source code, you can build Pragtical using Meson.\nIn addition, the ",(0,i.kt)("inlineCode",{parentName:"p"},"build-packages.sh")," script can be used to compile Pragtical and\ncreate an OS-specific package for Linux, Windows or macOS."),(0,i.kt)("p",null,"The following libraries are required:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"LuaJIT or Lua 5.4"),(0,i.kt)("li",{parentName:"ul"},"SDL2"),(0,i.kt)("li",{parentName:"ul"},"freetype2"),(0,i.kt)("li",{parentName:"ul"},"pcre2")),(0,i.kt)("p",null,"If they are not found, they will be downloaded and compiled by Meson.\nOtherwise, if they are present, they will be used to compile Pragtical."),(0,i.kt)("h2",{id:"build-script"},"Build Script"),(0,i.kt)("p",null,"If you compile Pragtical yourself,\nit is recommended to use ",(0,i.kt)("inlineCode",{parentName:"p"},"build-packages.sh"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"bash build-packages.sh -h\n")),(0,i.kt)("p",null,"The script will run Meson and create an archive with the application.\nPragtical can be easily installed\nby unpacking the archive in any directory of your choice."),(0,i.kt)("p",null,'On Windows two packages will be created, one called "portable" using the "data"\nfolder next to the executable and the other one using a Unix-like file layout.\nThe portable version conforms to the directory structure of normal Windows\nprograms while the Unix-like file layout is meant for a Unix-like environment.'),(0,i.kt)("p",null,"Pragtical does not hard-code any directories and instead relies on environment\nvariables. This allows the package to be run in any directory."),(0,i.kt)("h2",{id:"portable"},"Portable"),(0,i.kt)("p",null,"When running ",(0,i.kt)("inlineCode",{parentName:"p"},"meson setup")," you may specify ",(0,i.kt)("inlineCode",{parentName:"p"},"-Dportable=true")," to install Pragtical\nas a portable application."),(0,i.kt)("p",null,"Pragtical needs the ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," directory to run properly.\nWhen ",(0,i.kt)("inlineCode",{parentName:"p"},"portable")," is enabled, Pragtical will use the ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," directory placed next\nto the executable.\nOtherwise, Pragtical will use Unix-like directory locations.\nIt will use ",(0,i.kt)("inlineCode",{parentName:"p"},"$prefix/share/pragtical")," for ",(0,i.kt)("inlineCode",{parentName:"p"},"data"),"\nand the executable will be located in ",(0,i.kt)("inlineCode",{parentName:"p"},"$prefix/bin"),".\n",(0,i.kt)("inlineCode",{parentName:"p"},"$prefix")," is determined when the application starts such that\n",(0,i.kt)("inlineCode",{parentName:"p"},"$prefix/bin")," corresponds to the location of the executable."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"user")," directory does not depend on the ",(0,i.kt)("inlineCode",{parentName:"p"},"portable")," option and will always be\n",(0,i.kt)("inlineCode",{parentName:"p"},"$HOME/.config/pragtical"),".\nOn Windows, ",(0,i.kt)("inlineCode",{parentName:"p"},"$USERPROFILE")," will be used instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"$HOME"),"."),(0,i.kt)("h2",{id:"linux"},"Linux"),(0,i.kt)("p",null,"On Debian-based systems the required libraries and Meson can be installed\nusing the following commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# To install the required libraries:\nsudo apt install libfreetype6-dev libsdl2-dev libpcre2-dev liblua5.4-dev\n\n# To install Meson:\nsudo apt install meson\n# or pip3 install --user meson\n")),(0,i.kt)("p",null,"To build Pragtical with Meson the commands below can be used:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'meson setup --buildtype=release --prefix <prefix> build\nmeson compile -C build\nDESTDIR="$(pwd)/pragtical" meson install --skip-subprojects -C build\n')),(0,i.kt)("p",null,"where ",(0,i.kt)("inlineCode",{parentName:"p"},"<prefix>")," depends on the OS you are using:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"on Linux is ",(0,i.kt)("inlineCode",{parentName:"li"},"/usr")),(0,i.kt)("li",{parentName:"ul"},"on macOS application bundle can be ",(0,i.kt)("inlineCode",{parentName:"li"},'"/Pragtical.app"'))),(0,i.kt)("p",null,"If you are using a version of Meson below 0.54\nyou need to use different commands to compile and install:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"meson setup --buildtype=release build\nninja -C build\nninja -C build install\n")),(0,i.kt)("h2",{id:"macos"},"macOS"),(0,i.kt)("p",null,"macOS is fully supported and a notarized app disk image is provided in the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pragtical/pragtical/releases/latest/"},"release page"),".\nIn addition, the application can be compiled using the generic instructions\ngiven above."),(0,i.kt)("h2",{id:"windows-msys2"},"Windows MSYS2"),(0,i.kt)("p",null,"The build environment chosen for Pragtical on Windows is ",(0,i.kt)("a",{parentName:"p",href:"https://www.msys2.org/"},"MSYS2"),".\nFollow the installation instructions in the link."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Open ",(0,i.kt)("inlineCode",{parentName:"li"},"MinGW 64-bit")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"MinGW 32-bit")," shell from the start menu."),(0,i.kt)("li",{parentName:"ul"},"Update the MSYS2 installation with ",(0,i.kt)("inlineCode",{parentName:"li"},"pacman -Syu")),(0,i.kt)("li",{parentName:"ul"},"Restart the shell"),(0,i.kt)("li",{parentName:"ul"},"Install the dependencies:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pacman -S \\\n  ${MINGW_PACKAGE_PREFIX}-freetype \\\n  ${MINGW_PACKAGE_PREFIX}-gcc \\\n  ${MINGW_PACKAGE_PREFIX}-ninja \\\n  ${MINGW_PACKAGE_PREFIX}-pcre2 \\\n  ${MINGW_PACKAGE_PREFIX}-pkg-config \\\n  ${MINGW_PACKAGE_PREFIX}-python-pip \\\n  ${MINGW_PACKAGE_PREFIX}-SDL2\npip3 install meson\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"${MINGW_PACKAGE_PREFIX}")," expands either to ",(0,i.kt)("inlineCode",{parentName:"p"},"mingw-w64-i686")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"mingw-w64-x86_64"),"\ndepending on the current MSYS2 shell used."))}c.isMDXComponent=!0}}]);