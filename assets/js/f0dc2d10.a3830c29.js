"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9968],{29057:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>r});var t=s(85893),i=s(11151);const c={sidebar_position:1,description:"Learn about Pragtical's class implementation."},a="Classes and Objects",o={id:"developer-guide/writing-plugins/classes-and-objects",title:"Classes and Objects",description:"Learn about Pragtical's class implementation.",source:"@site/docs/developer-guide/writing-plugins/classes-and-objects.md",sourceDirName:"developer-guide/writing-plugins",slug:"/developer-guide/writing-plugins/classes-and-objects",permalink:"/docs/developer-guide/writing-plugins/classes-and-objects",draft:!1,unlisted:!1,editUrl:"https://github.com/pragtical/pragtical.github.io/edit/main/docs/developer-guide/writing-plugins/classes-and-objects.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Learn about Pragtical's class implementation."},sidebar:"tutorialSidebar",previous:{title:"Writing Plugins",permalink:"/docs/category/writing-plugins"},next:{title:"Documents",permalink:"/docs/developer-guide/writing-plugins/documents"}},l={},r=[{value:"Creating classes",id:"creating-classes",level:2},{value:"Super class",id:"super-class",level:2},{value:"Class relationships",id:"class-relationships",level:2}];function d(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"classes-and-objects",children:"Classes and Objects"}),"\n",(0,t.jsx)(n.p,{children:"We've briefly talked about the class implementation used by Pragtical\nin the introduction.\nIn this article, we'll talk about how to use the implementation\nefficiently."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Some methods here will be written differently than in\nthe source code.\nThis is to clarify how the methods ",(0,t.jsx)(n.em,{children:"should"})," be called."]})}),"\n",(0,t.jsx)(n.h2,{id:"creating-classes",children:"Creating classes"}),"\n",(0,t.jsxs)(n.p,{children:["Similar to many other languages, all classes extend the ",(0,t.jsx)(n.code,{children:"Object"})," class.\nTo extend a class, one can use the ",(0,t.jsx)(n.code,{children:"Object.extend()"})," method."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"function Object.extend(base_class: Object): Object end\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This method accepts one parameter \u2014 the class to copy.\nThis method will create a copy of a ",(0,t.jsx)(n.code,{children:"Object"})," that can\nbe extended without affecting the original object."]}),"\n",(0,t.jsxs)(n.p,{children:["You can now define or override methods and metamethods of this\nnewly created class.\nTo initialize a class, you can override the ",(0,t.jsx)(n.code,{children:"Object:new()"})," method."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- load the Object class\nlocal Object = require "core.object"\n-- since the source class is usually the one you want to copy,\n-- we often simplify it to Object:extend().\n-- This is equivalent to Object.extend(Object).\nlocal Animal = Object:extend()\n-- define a constructor for Animal\nfunction Animal:new()\n  self.type = "animal"\nend\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Object"})," implements the ",(0,t.jsx)(n.code,{children:"__tostring()"})," and ",(0,t.jsx)(n.code,{children:"__call()"})," metamethods.\nYou can override the ",(0,t.jsx)(n.code,{children:"__tostring()"})," metamethod to return a string\nthat suits your class."]})}),"\n",(0,t.jsx)(n.h2,{id:"super-class",children:"Super class"}),"\n",(0,t.jsxs)(n.p,{children:["You can access the super class via ",(0,t.jsx)(n.code,{children:"Object.super"}),".\nFor instance, to call the constructor of the super class, you can do:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local Object = require "core.object"\nlocal Animal = Object:extend()\nfunction Animal:new()\n  self.type = "animal"\nend\n\nlocal Dog = Animal:extend()\nfunction Dog:new()\n  -- call the superclass constructor\n  -- note the use of . instead of : and explicitly passing self\n  Dog.super.new(self)\nend\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Note that you must call super class methods with ",(0,t.jsx)(n.code,{children:"."})," instead of ",(0,t.jsx)(n.code,{children:":"}),"\nand pass ",(0,t.jsx)(n.code,{children:"self"})," as the first parameter.\nIf you call the method with ",(0,t.jsx)(n.code,{children:":"}),", it will call the method with ",(0,t.jsx)(n.code,{children:"self"}),"\nas ",(0,t.jsx)(n.code,{children:"super"}),", which is ",(0,t.jsx)(n.strong,{children:"the super class"})," and not ",(0,t.jsx)(n.strong,{children:"the instance"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"class-relationships",children:"Class relationships"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Object"})," class also provide utility methods for checking relations\nbetween classes and object."]}),"\n",(0,t.jsxs)(n.p,{children:["To check whether an object is strictly an instance of a class\n(not an instance of a child class),\nuse ",(0,t.jsx)(n.code,{children:"Object:is()"}),".\nTo do the inverse, use ",(0,t.jsx)(n.code,{children:"Object:is_class_of()"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"function Object:is(class: Object): boolean end\nfunction Object.is_class_of(class: Object, instance: Object): boolean end\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Object:is()"})," accepts a parameter \u2014 the class to compare it to.\nIf the object is strictly an instance of the class,\nthe method returns true."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Object.is_class_of()"})," accepts a class and compares it against\nan instance of an object.\nIf the object is a strictly an instance of the class,\nthe method returns true."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"local Animal = Object:extend()\nlocal Dog = Animal:extend()\nlocal Cat = Animal:extend()\nlocal doggo = Dog()\n\nprint(doggo:is(Dog)) -- prints true\nprint(doggo:is(Cat)) -- prints false\nprint(doggo:is(Animal)) -- also prints false\n\n-- note that since we're going to pass Dog as the first parameter,\n-- we might as well as use the colon notation\nprint(Dog:is_class_of(doggo)) -- prints true\nprint(Cat:is_class_of(doggo)) -- prints false\nprint(Animal:is_class_of(doggo)) -- prints false\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To check whether an object is an instance of a class\n(or an instance of child class), use ",(0,t.jsx)(n.code,{children:"Object:extends()"}),".\nTo do the inverse, use ",(0,t.jsx)(n.code,{children:"Object:is_extended_by()"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"function Object:extends(class: Object): boolean end\nfunction Object.is_extended_by: Object, instance: Object): boolean end\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The methods accept the same parameters as ",(0,t.jsx)(n.code,{children:"Object:is()"}),"\nand ",(0,t.jsx)(n.code,{children:"Object:is_class_of()"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"local Animal = Object:extend()\nlocal Dog = Animal:extend()\nlocal Cat = Animal:extend()\nlocal doggo = Dog()\n\nprint(doggo:extends(Dog)) -- prints true\nprint(doggo:extends(Cat)) -- prints false\nprint(doggo:extends(Animal)) -- prints true\n\n-- note that since we're going to pass Dog as the first parameter,\n-- we might as well as use the colon notation\nprint(Dog:is_extended_by(doggo)) -- prints true\nprint(Cat:is_extended_by(doggo)) -- prints false\nprint(Animal:is_extended_by(doggo)) -- prints true\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>a});var t=s(67294);const i={},c=t.createContext(i);function a(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);