"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3469],{80705:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>o});var i=r(85893),s=r(11151);const t={sidebar_position:20},l="core.common",a={id:"api/core.common",title:"core.common",description:"Utility functions.",source:"@site/docs/api/core.common.md",sourceDirName:"api",slug:"/api/core.common",permalink:"/docs/api/core.common",draft:!1,unlisted:!1,editUrl:"https://github.com/pragtical/pragtical.github.io/edit/main/docs/api/core.common.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"core.commandview",permalink:"/docs/api/core.commandview"},next:{title:"core.config",permalink:"/docs/api/core.config"}},c={},o=[{value:"common.serializeoptions",id:"commonserializeoptions",level:2},{value:"escape",id:"escape",level:3},{value:"indent_str",id:"indent_str",level:3},{value:"initial_indent",id:"initial_indent",level:3},{value:"limit",id:"limit",level:3},{value:"pretty",id:"pretty",level:3},{value:"sort",id:"sort",level:3},{value:"basename",id:"basename",level:2},{value:"bench",id:"bench",level:2},{value:"blend_colors",id:"blend_colors",level:2},{value:"clamp",id:"clamp",level:2},{value:"color",id:"color",level:2},{value:"darken_color",id:"darken_color",level:2},{value:"dir_list_suggest",id:"dir_list_suggest",level:2},{value:"dir_path_suggest",id:"dir_path_suggest",level:2},{value:"dirname",id:"dirname",level:2},{value:"distance",id:"distance",level:2},{value:"draw_text",id:"draw_text",level:2},{value:"find_index",id:"find_index",level:2},{value:"fuzzy_match",id:"fuzzy_match",level:2},{value:"fuzzy_match_with_recents",id:"fuzzy_match_with_recents",level:2},{value:"home_encode",id:"home_encode",level:2},{value:"home_encode_list",id:"home_encode_list",level:2},{value:"home_expand",id:"home_expand",level:2},{value:"hsv_to_rgb",id:"hsv_to_rgb",level:2},{value:"is_absolute_path",id:"is_absolute_path",level:2},{value:"is_utf8_cont",id:"is_utf8_cont",level:2},{value:"lerp",id:"lerp",level:2},{value:"lighten_color",id:"lighten_color",level:2},{value:"match_ignore_rule",id:"match_ignore_rule",level:2},{value:"match_pattern",id:"match_pattern",level:2},{value:"merge",id:"merge",level:2},{value:"mkdirp",id:"mkdirp",level:2},{value:"normalize_path",id:"normalize_path",level:2},{value:"normalize_volume",id:"normalize_volume",level:2},{value:"path_belongs_to",id:"path_belongs_to",level:2},{value:"path_suggest",id:"path_suggest",level:2},{value:"relative_path",id:"relative_path",level:2},{value:"rgb_to_hsv",id:"rgb_to_hsv",level:2},{value:"rm",id:"rm",level:2},{value:"round",id:"round",level:2},{value:"serialize",id:"serialize",level:2},{value:"splice",id:"splice",level:2},{value:"utf8_chars",id:"utf8_chars",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"corecommon",children:"core.common"}),"\n",(0,i.jsx)(n.p,{children:"Utility functions."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local common = require "core.common"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"commonserializeoptions",children:"common.serializeoptions"}),"\n",(0,i.jsx)(n.h3,{id:"escape",children:"escape"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"(field) escape: boolean?\n"})}),"\n",(0,i.jsx)(n.p,{children:'Uses normal escape characters ("\\n") instead of decimal escape sequences ("\\10").'}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"indent_str",children:"indent_str"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"(field) indent_str: string?\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The indentation character to use. Defaults to ",(0,i.jsx)(n.code,{children:'"  "'}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"initial_indent",children:"initial_indent"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"(field) initial_indent: number?\n"})}),"\n",(0,i.jsx)(n.p,{children:"The initial indentation level. Defaults to 0."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"limit",children:"limit"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"(field) limit: number?\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Limits the depth when serializing nested tables. Defaults to ",(0,i.jsx)(n.code,{children:"math.huge"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"pretty",children:"pretty"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"(field) pretty: boolean?\n"})}),"\n",(0,i.jsx)(n.p,{children:"Enables pretty printing."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"sort",children:"sort"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"(field) sort: boolean?\n"})}),"\n",(0,i.jsx)(n.p,{children:"Sorts the output if it is a sortable table."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"basename",children:"basename"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.basename(path: string)\n  -> string\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns the last portion of a path."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"bench",children:"bench"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.bench(name: string, fn: fun(...any):any, ...any)\n  -> any\n"})}),"\n",(0,i.jsx)(n.p,{children:"Prints the execution time of a function."}),"\n",(0,i.jsx)(n.p,{children:"The execution time and percentage of frame time\nfor the function is printed to standard output.\nThe frame rate is always assumed to be 60 FPS, thus\na value of 100% would mean that the benchmark took\n1/60 of a second to execute."}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"return"})," \u2014 The result returned by the function"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"blend_colors",children:"blend_colors"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.blend_colors(dst: renderer.color, src: renderer.color)\n  -> blended_color: renderer.color\n"})}),"\n",(0,i.jsx)(n.p,{children:"Combine two colors to create a new color based on their transparency."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"clamp",children:"clamp"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.clamp(n: number, lo: number, hi: number)\n  -> number\n"})}),"\n",(0,i.jsx)(n.p,{children:"Clamps the number n between lo and hi."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"color",children:"color"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.color(str: string)\n  -> r: number\n  2. g: number\n  3. b: number\n  4. a: number\n"})}),"\n",(0,i.jsx)(n.p,{children:"Parses a CSS color string."}),"\n",(0,i.jsx)(n.p,{children:"Only these formats are supported:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"rgb(r, g, b)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"rgba(r, g, b, a)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"#rrggbbaa"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"#rrggbb"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"darken_color",children:"darken_color"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.darken_color(rgba: renderer.color, percent: integer)\n  -> renderer.color\n"})}),"\n",(0,i.jsx)(n.p,{children:"Makes a color darker by the given percentage."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"dir_list_suggest",children:"dir_list_suggest"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.dir_list_suggest(text: string, dir_list: string[])\n  -> string[]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Filters a list of paths to find those that are related to the input path."}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"text"})," \u2014 The input path."]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"dir_list"})," \u2014 A list of paths to filter."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"dir_path_suggest",children:"dir_path_suggest"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.dir_path_suggest(text: string, root: string)\n  -> string[]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns a list of directories that are related to a path."}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"text"})," \u2014 The input path."]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"root"})," \u2014 The path to relate to."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"dirname",children:"dirname"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.dirname(path: string)\n  -> string|nil\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns the directory name of a path.\nIf the path doesn't have a directory, this function may return nil."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"distance",children:"distance"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.distance(x1: number, y1: number, x2: number, y2: number)\n  -> number\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns the euclidean distance between two points."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"draw_text",children:"draw_text"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'function core.common.draw_text(font: renderer.font, color: renderer.color, text: string, align: string|"center"|"left"|"right", x: number, y: number, w: number, h: number)\n  -> x_advance: number\n  2. y_advance: number\n  3. x: number\n  4. y: number\n'})}),"\n",(0,i.jsx)(n.p,{children:"Draws text onto the window.\nThe function returns the X and Y coordinates of the bottom-right\ncorner of the text."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'align:\n    | "left" -- Align text to the left of the bounding box\n    | "right" -- Align text to the right of the bounding box\n    | "center" -- Center text in the bounding box\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"find_index",children:"find_index"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.find_index(tbl: table, prop: any)\n  -> number|nil\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns the first index where a subtable in tbl has prop set.\nIf none is found, nil is returned."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"fuzzy_match",children:"fuzzy_match"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.fuzzy_match(haystack: string, needle: string, files: boolean)\n  -> number\n"})}),"\n",(0,i.jsx)(n.p,{children:"Performs fuzzy matching."}),"\n",(0,i.jsx)(n.p,{children:"If the haystack is a string, a score ranging from 0 to 1 is returned.\nIf the haystack is a table, a table containing the haystack sorted in ascending\norder of similarity is returned."}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"files"})," \u2014 If true, the matching process will be performed in reverse to better match paths."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"fuzzy_match_with_recents",children:"fuzzy_match_with_recents"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.fuzzy_match_with_recents(haystack: string[], recents: string[], needle: string)\n  -> string[]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Performs fuzzy matching and returns recently used strings if needed."}),"\n",(0,i.jsx)(n.p,{children:"If the needle is empty, then a list of recently used strings\nare added to the result, followed by strings from the haystack."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"home_encode",children:"home_encode"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.home_encode(text: string)\n  -> string\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Returns a path where the user's home directory is replaced by ",(0,i.jsx)(n.code,{children:'"~"'}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"home_encode_list",children:"home_encode_list"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.home_encode_list(paths: string[])\n  -> string[]\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Returns a list of paths where the user's home directory is replaced by ",(0,i.jsx)(n.code,{children:'"~"'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"paths"})," \u2014 A list of paths to encode"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"home_expand",children:"home_expand"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.home_expand(text: string)\n  -> string\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Expands the ",(0,i.jsx)(n.code,{children:'"~"'})," prefix in a path into the user's home directory.\nThis function is not guaranteed to return an absolute path."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"hsv_to_rgb",children:"hsv_to_rgb"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.hsv_to_rgb(h: number, s: number, v: number, a: number)\n  -> rgba: renderer.color\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Converts an HSV color value to RGB. Conversion formula\nadapted from ",(0,i.jsx)(n.a,{href:"http://en.wikipedia.org/wiki/HSV_color_space",children:"http://en.wikipedia.org/wiki/HSV_color_space"}),".\nAssumes h, s, and v are contained in the set [0, 1] and\nreturns r, g, and b in the set [0, 255]."]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"h"})," \u2014 The hue"]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"s"})," \u2014 The saturation"]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"v"})," \u2014 The brightness"]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"a"})," \u2014 The alpha"]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"return"})," ",(0,i.jsx)(n.code,{children:"rgba"})," \u2014 The RGB representation"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"is_absolute_path",children:"is_absolute_path"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.is_absolute_path(path: string)\n  -> boolean\n"})}),"\n",(0,i.jsx)(n.p,{children:"Checks whether a path is absolute or relative."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"is_utf8_cont",children:"is_utf8_cont"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.is_utf8_cont(s: string, offset?: integer)\n  -> boolean\n"})}),"\n",(0,i.jsx)(n.p,{children:"Checks if the byte at offset is a UTF-8 continuation byte."}),"\n",(0,i.jsx)(n.p,{children:"UTF-8 encodes code points in 1 to 4 bytes.\nFor a multi-byte sequence, each byte following the start byte is a continuation byte."}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"offset"})," \u2014 The offset of the string to start searching. Defaults to 1."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"lerp",children:"lerp"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.lerp(a: number, b: number, t: number)\n  -> number\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns a value between a and b on a linear scale, based on the\ninterpolation point t."}),"\n",(0,i.jsx)(n.p,{children:"If a and b are tables, a table containing the result for all the\nelements in a and b is returned."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"lighten_color",children:"lighten_color"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.lighten_color(rgba: renderer.color, percent: integer)\n  -> renderer.color\n"})}),"\n",(0,i.jsx)(n.p,{children:"Makes a color brighter by the given percentage."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"match_ignore_rule",children:"match_ignore_rule"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.match_ignore_rule(path: string, info: system.fileinfo, ignore_rules: core.ignore_file_rule[])\n  -> boolean\n"})}),"\n",(0,i.jsx)(n.p,{children:"Checks if a path matches one of the given ignore rules."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"match_pattern",children:"match_pattern"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.match_pattern(text: string, pattern: string|string[], ...any)\n  -> start_index: boolean|number\n  2. end_index: number|nil\n"})}),"\n",(0,i.jsx)(n.p,{children:"Matches a string against a list of patterns."}),"\n",(0,i.jsx)(n.p,{children:"If a match was found, its start and end index is returned.\nOtherwise, false is returned."}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"..."})," \u2014 Other options for string.find()."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"merge",children:"merge"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.merge(a: table|nil, b?: table)\n  -> table\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns a new table containing the contents of b merged into a."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"mkdirp",children:"mkdirp"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.mkdirp(path: string)\n  -> success: boolean\n  2. error: string|nil\n  3. path: string|nil\n"})}),"\n",(0,i.jsx)(n.p,{children:"Creates a directory recursively if necessary."}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"return"})," ",(0,i.jsx)(n.code,{children:"success"})]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"return"})," ",(0,i.jsx)(n.code,{children:"error"})]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"return"})," ",(0,i.jsx)(n.code,{children:"path"})," \u2014 The path where an error occured."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"normalize_path",children:"normalize_path"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.normalize_path(filename: string|nil)\n  -> string|nil\n"})}),"\n",(0,i.jsx)(n.p,{children:"Normalizes a path into the same format across platforms."}),"\n",(0,i.jsxs)(n.p,{children:["On Windows, all drive letters are converted to uppercase.\nUNC paths with drive letters are converted back to ordinary Windows paths.\nAll path separators (",(0,i.jsx)(n.code,{children:'"/"'}),", ",(0,i.jsx)(n.code,{children:'"\\\\"'}),") are converted to platform-specific ones."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"normalize_volume",children:"normalize_volume"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.normalize_volume(filename: string|nil)\n  -> string|nil\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Normalizes the drive letter in a Windows path to uppercase.\nThis function expects an absolute path, e.g. a path from ",(0,i.jsx)(n.code,{children:"system.absolute_path"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["This function is needed because the path returned by ",(0,i.jsx)(n.code,{children:"system.absolute_path"}),"\nmay contain drive letters in upper or lowercase."]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"filename"})," \u2014 The input path."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"path_belongs_to",children:"path_belongs_to"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.path_belongs_to(filename: string, path: string)\n  -> boolean\n"})}),"\n",(0,i.jsx)(n.p,{children:"Checks whether a path belongs to a parent directory."}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"filename"})," \u2014 The path to check."]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"path"})," \u2014 The parent path."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"path_suggest",children:"path_suggest"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.path_suggest(text: string, root?: string)\n  -> string[]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns a list of paths that are relative to the input path."}),"\n",(0,i.jsx)(n.p,{children:"If a root directory is specified, the function returns paths\nthat are relative to the root directory."}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"text"})," \u2014 The input path."]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"root"})," \u2014 The root directory."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"relative_path",children:"relative_path"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.relative_path(ref_dir: string, dir: string)\n  -> string\n"})}),"\n",(0,i.jsx)(n.p,{children:"Makes a path relative to the given reference directory when possible."}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"ref_dir"})," \u2014 The path to check against."]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"dir"})," \u2014 The input path."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"rgb_to_hsv",children:"rgb_to_hsv"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.rgb_to_hsv(rgba: renderer.color)\n  -> hsva: table\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Converts an RGB color value to HSV. Conversion formula\nadapted from ",(0,i.jsx)(n.a,{href:"http://en.wikipedia.org/wiki/HSV_color_space",children:"http://en.wikipedia.org/wiki/HSV_color_space"}),".\nAssumes r, g, and b are contained in the set [0, 255] and\nreturns h, s, and v in the set [0, 1]."]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"return"})," ",(0,i.jsx)(n.code,{children:"hsva"})," \u2014 The HSV representation"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"rm",children:"rm"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.rm(path: string, recursively: boolean)\n  -> success: boolean\n  2. error: string|nil\n  3. path: string|nil\n"})}),"\n",(0,i.jsx)(n.p,{children:"Removes a path."}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"recursively"})," \u2014 If true, the function will attempt to remove everything in the specified path."]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"return"})," ",(0,i.jsx)(n.code,{children:"success"})]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"return"})," ",(0,i.jsx)(n.code,{children:"error"})]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"return"})," ",(0,i.jsx)(n.code,{children:"path"})," \u2014 The path where the error occured."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"round",children:"round"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.round(n: number)\n  -> number\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns the value of a number rounded to the nearest integer."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"serialize",children:"serialize"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.serialize(val: any, opts?: common.serializeoptions)\n  -> string\n"})}),"\n",(0,i.jsx)(n.p,{children:"Serializes a value into a Lua string that is loadable with load()."}),"\n",(0,i.jsx)(n.p,{children:"Only these basic types are supported:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"nil"}),"\n",(0,i.jsx)(n.li,{children:"boolean"}),"\n",(0,i.jsxs)(n.li,{children:["number (except very large numbers and special constants, e.g. ",(0,i.jsx)(n.code,{children:"math.huge"}),", ",(0,i.jsx)(n.code,{children:"inf"})," and ",(0,i.jsx)(n.code,{children:"nan"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"integer"}),"\n",(0,i.jsx)(n.li,{children:"string"}),"\n",(0,i.jsx)(n.li,{children:"table"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"splice",children:"splice"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.splice(t: any[], at: number, remove: number, insert?: any[])\n"})}),"\n",(0,i.jsx)(n.p,{children:"Splices a numerically indexed table.\nThis function mutates the original table."}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"at"})," \u2014 Index at which to start splicing."]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"remove"})," \u2014 Number of elements to remove."]}),"\n",(0,i.jsxs)(n.p,{children:["@",(0,i.jsx)(n.em,{children:"param"})," ",(0,i.jsx)(n.code,{children:"insert"})," \u2014 A table containing elements to insert after splicing."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"utf8_chars",children:"utf8_chars"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"function core.common.utf8_chars(text: string)\n  -> fun():string\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns an iterator that yields a UTF-8 character on each iteration."}),"\n",(0,i.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>l});var i=r(67294);const s={},t=i.createContext(s);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);