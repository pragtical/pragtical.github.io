"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1484],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),d=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=d(e.components);return i.createElement(l.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(t),u=r,h=c["".concat(l,".").concat(u)]||c[u]||m[u]||o;return t?i.createElement(h,a(a({ref:n},p),{},{components:t})):i.createElement(h,a({ref:n},p))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:r,a[1]=s;for(var d=2;d<o;d++)a[d]=t[d];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3993:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var i=t(7462),r=(t(7294),t(3905));const o={sidebar_position:8,description:"Learn how to interact with the OS, such as reading and writing to the clipboard, setting window properties and getting high-resolution time."},a="Interacting with the OS",s={unversionedId:"developer-guide/interacting-with-the-os",id:"developer-guide/interacting-with-the-os",title:"Interacting with the OS",description:"Learn how to interact with the OS, such as reading and writing to the clipboard, setting window properties and getting high-resolution time.",source:"@site/docs/developer-guide/interacting-with-the-os.md",sourceDirName:"developer-guide",slug:"/developer-guide/interacting-with-the-os",permalink:"/docs/developer-guide/interacting-with-the-os",draft:!1,editUrl:"https://github.com/pragtical/pragtical.github.io/tree/main/packages/create-docusaurus/templates/shared/docs/developer-guide/interacting-with-the-os.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,description:"Learn how to interact with the OS, such as reading and writing to the clipboard, setting window properties and getting high-resolution time."},sidebar:"tutorialSidebar",previous:{title:"Using Regular Expressions",permalink:"/docs/developer-guide/using-regular-expressions"},next:{title:"Child Processes",permalink:"/docs/developer-guide/child-processes"}},l={},d=[{value:"Using the System API",id:"using-the-system-api",level:2},{value:"Clipboard",id:"clipboard",level:3},{value:"File / Directory operations",id:"file--directory-operations",level:3},{value:"Timing",id:"timing",level:3},{value:"Window manipulation",id:"window-manipulation",level:2},{value:"Miscellaneous",id:"miscellaneous",level:2}],p={toc:d},c="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"interacting-with-the-os"},"Interacting with the OS"),(0,r.kt)("p",null,"This is where Pragtical's Lua code interact with its underlying C engine."),(0,r.kt)("h2",{id:"using-the-system-api"},"Using the System API"),(0,r.kt)("p",null,"There are many functions that belong to this API; not all are necessary for\nplugin development.\nAs such, we'll ignore them here and only document the useful ones."),(0,r.kt)("h3",{id:"clipboard"},"Clipboard"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"system.set_clipboard()")," sets the clipboard content,\nwhile ",(0,r.kt)("inlineCode",{parentName:"p"},"system.get_clipboard()")," retrieves the clipboard content."),(0,r.kt)("p",null,"The functions do not support rich content such as images and files."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"function system.set_clipboard(text: string): () end\nfunction system.get_clipboard(text: string): string end\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'system.set_clipboard("wow magic")\n-- prints:\n-- wow magic\nprint(system.get_clipboard("wow magic"))\n')),(0,r.kt)("h3",{id:"file--directory-operations"},"File / Directory operations"),(0,r.kt)("p",null,"These functions deal with files, directories and paths."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"-- Returns a list of files and directories in a directory.\nfunction system.list_dir(path: string): {string}, string end\n-- Creates a new directory.\nfunction system.mkdir(path: string): boolean, string end\n-- Removes a directory.\nfunction system.rmdir(path: string): boolean string end\n-- Changes the current working directory (equivalent to the `cd` command)\nfunction system.chdir(path: string): () end\n-- Resolves the input path (removing all '.' and '..') into an absolute path.\nfunction system.absolute_path(path: string): () end\n\n-- Types of paths\nlocal enum FileType\n  \"file\"\n  \"dir\"\nend\n\n-- The information for a path\nlocal record FileInfo\n  modified: number\n  size: number\n  type: FileType\n  symlink: boolean\nend\n\n-- Returns information for a file or a directory.\nfunction system.get_file_info(path: string): FileInfo, string end\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"system.get_file_info()")," returns a table with the following properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"modified"),": Modification time in seconds (UNIX timestamp)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"size"),": Size of the file in bytes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type"),": Type of the path (Can be ",(0,r.kt)("inlineCode",{parentName:"li"},"file")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"dir"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"symlink"),": The directory is a symlink (Only set on Linux and on directories).")),(0,r.kt)("p",null,"All the functions listed above except ",(0,r.kt)("inlineCode",{parentName:"p"},"system.chdir()")," will return ",(0,r.kt)("inlineCode",{parentName:"p"},"nil"),"\nfollowed by an error message when an error occurred.\n",(0,r.kt)("inlineCode",{parentName:"p"},"system.chdir()")," will throw an error if an error occurred."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'-- DO NOT RUN THIS CODE!\n-- the code and its outputs are purely for demonstration only,\n-- and will not reflect your actual usage.\nlocal dir = "../pragtical"\nlocal dir_resolved = system.absolute_path(dir)\n-- prints:\n-- /home/user/gh/pragtical\nprint(dir_resolved)\n\n-- prints:\n-- .git => dir\n-- docs => dir\n-- .editorconfig => file\n-- LICENSE => file\n-- ...\n-- pragtical => file\nfor i, d in ipairs(system.list_dir(dir_resolved)) do\n  local info = system.get_file_info(dir_resolved .. "/" .. d)\n  print(d .. " => " .. info.type)\nend\n\n-- create some directories\n-- this will not work because system.mkdir() doesn\'t create directories\n-- recursively, just like `mkdir` command without the `-p` option.\n-- prints:\n-- false   No such file or directory\nprint(system.mkdir(dir_resolved .. "/1/2"))\n\n-- these will work\n-- prints:\n-- true\nprint(system.mkdir(dir_resolved .. "/1"))\n-- prints:\n-- true\nprint(system.mkdir(dir_resolved .. "/1/2"))\n\n-- system.rmdir() does not support removing non-empty dirs, so\n-- this will not work and print an error\n-- prints:\n-- false   Directory not empty\nprint(system.rmdir(dir_resolved .. "/1"))\n\n-- instead, you should try to remove them recursively, making sure that each\n-- directory is empty\n-- prints:\n-- true\nprint(system.rmdir(dir_resolved .. "/1/2"))\n-- prints:\n-- true\nprint(system.rmdir(dir_resolved .. "/1"))\n')),(0,r.kt)("h3",{id:"timing"},"Timing"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"system.get_time()")," returns time in seconds since Pragtical started.\nIt is a high-precision alternative to ",(0,r.kt)("inlineCode",{parentName:"p"},"os.time()"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"function system.get_time(): number end\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"-- prints:\n-- 30148.079763237\nprint(system.get_time())\n")),(0,r.kt)("h2",{id:"window-manipulation"},"Window manipulation"),(0,r.kt)("p",null,"These functions deal with Pragtical window."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'-- Sets the window opacity from 0 to 1.\nfunction system.set_window_opacity(opacity: number): boolean end\n-- Sets the window title.\nfunction system.set_window_title(title: string): () end\n\nlocal enum WindowMode\n  "normal"\n  "maximized"\n  "minimized"\n  "fullscreen"\nend\n\n-- Sets the window mode.\nfunction system.set_window_mode(mode: WindowMode): () end\n\n-- Enables/disables window borders (decoration).\nfunction system.set_window_bordered(enable: boolean): () end\n-- Sets the window hit test region.\nfunction system.set_window_hit_test(height?: number,\n                                    control_width?: number,\n                                    resize_border?: number): ()\nend\n-- Gets the window dimension and position.\nfunction system.get_window_size(): {number, number, number, number} end\n-- Sets the window dimension and position.\nfunction system.set_window_size(width:  number,\n                                height: number,\n                                x:      number,\n                                y:      number): ()\nend\n-- Checks whether windows has input focus.\nfunction system.window_has_focus(): boolean end\n-- Shows a message box with an error message.\nfunction system.show_fatal_error(title: string, msg: string): () end\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"height")," parameter in ",(0,r.kt)("inlineCode",{parentName:"p"},"system.set_window_hit_test()")," refers to the height\nof the top decoration. Users can drag this part of the window to move it.\n",(0,r.kt)("inlineCode",{parentName:"p"},"control_width")," specifies the width of various window controls\n(minimize, maximize and close) buttons in the top right corner of the window.\n",(0,r.kt)("inlineCode",{parentName:"p"},"resize_border"),' specifies the width of a "border region" where users can\ndrag the window to resize it.\nThis value does not overlap with the ',(0,r.kt)("inlineCode",{parentName:"p"},"height")," parameter."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"system.get_window_size()")," returns the width, height, x-coordinate\nand y-coordinate of the window respectively."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"system.set_window_opacity()")," will return ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," if the operation failed.\nOtherwise, it returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("h2",{id:"miscellaneous"},"Miscellaneous"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"system.exec()")," runs a command in the background.\nIt is useful if you just want to run a program and doesn't care about its\noutput and exit code.\nIf you want more features, consider using the ",(0,r.kt)("a",{parentName:"p",href:"/en/tutorials/overview/process"},"Process API"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"system.fuzzy_match()")," generates a score for sorting text based on relevance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"function system.exec(command: string): () end\nfunction system.fuzzy_match(haystack: string,\n                            needle:   string,\n                            file:     boolean): number\nend\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"system.exec()")," accepts a string containing a command to run.\nThis command will be run as ",(0,r.kt)("inlineCode",{parentName:"p"},'system("<command> &")')," on POSIX platforms and\n",(0,r.kt)("inlineCode",{parentName:"p"},'cmd /c "<command>"')," on Windows, so make sure that the command is escaped\nproperly."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"system.fuzzy_match()")," takes in a ",(0,r.kt)("inlineCode",{parentName:"p"},"haystack")," (a possible match) and a ",(0,r.kt)("inlineCode",{parentName:"p"},"needle"),"\n(the string to search) to generate a similarity score.\nIf the score is 1, both strings are identical.\nWhen the third argument is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", the matching will be done backwards as this\nis more suitable for matching paths."))}m.isMDXComponent=!0}}]);